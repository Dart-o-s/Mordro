* Custom fonts
  :PROPERTIES:
  :header-args: :results output
  :END:

  Orgro offers the following fonts:

  - [[https://github.com/tonsky/FiraCode][Fira Code]] (bundled with the app)
  - All monospace fonts offered for dynamic download by the [[https://pub.dev/packages/google_fonts][google_fonts]] package
  - Additional fonts manually made available for dynamic download via the
    [[https://pub.dev/packages/dynamic_fonts][dynamic_fonts]] package
    - [[https://pub.dev/packages/dynamic_fonts][FiraGO]]
    - [[https://www.jetbrains.com/lp/mono/][JetBrains Mono]]
    - [[https://typeof.net/Iosevka/][Iosevka]]

  This file documents how the last category is prepared in literate-programming
  style.

** Font variants

   Org documents in general require four font variants:

   - regular
   - *bold*
   - /italic/
   - /bold italic/ :: You can't /*just*/ */combine/* ~*~ and ~/~, you have to
     italicize something that is naturally bold for some other reason,
     apparently

** FiraGO

   Download

   #+begin_src bash :dir ../..
     git clone --depth 1 https://github.com/bBoxType/FiraGO.git
   #+end_src

   Update

   #+begin_src bash :dir ../../FiraGO
     git pull
   #+end_src

   Checksum

   #+name: firago-csums
   #+begin_src bash :dir ../../FiraGO/Fonts :results table drawer replace
     for ttf in FiraGO_TTF_*/*/*.ttf; do
         echo $(basename $ttf) $(stat -f '%z' $ttf) $(openssl sha256 $ttf | cut -d '=' -f 2)
     done
   #+end_src

   #+RESULTS: firago-csums
   :results:
   | FiraGO-BoldItalic.ttf       | 813028 | 51ad0da400568385e038ccb962a692f145dfbd9071d7fe5cb0903fd2a8912ccd |
   | FiraGO-BookItalic.ttf       | 811792 | d1acf0bfba04de8a35888f402bbe029b3c412b2a52ea4da27bf498bc5973fc05 |
   | FiraGO-EightItalic.ttf      | 768336 | ef2d9f3c9caf711d9aab4839abf63d50e658db802555364f8bbec0fd594fb41a |
   | FiraGO-ExtraBoldItalic.ttf  | 812624 | fa332efd69db43a3dc3ea9cc9efbec938f5cb7d74331b653b5e5f5a0aab6f6cb |
   | FiraGO-ExtraLightItalic.ttf | 813732 | 17b25b0acc856d25a84066acb84de10adc0adc0057cfde52b45e453daec25825 |
   | FiraGO-FourItalic.ttf       | 765044 | e93d9f2e95f7ea40770583c41acaad4678ed90d5ef2cb0beeae073691805c8e4 |
   | FiraGO-HairItalic.ttf       | 778444 | 719d4c484d24961a1d34df543654e9483a59be136f11efbb9a94522c5feb7cf7 |
   | FiraGO-HeavyItalic.ttf      | 730912 | f7ee3438edc6d14046c0175eab3bc6edfccb72b7bda5f73e65509b5e1108573e |
   | FiraGO-Italic.ttf           | 813116 | 36713ecac376845daa58738d2c2ba797cf6f6477b8c5bb4fa79721dc970e8081 |
   | FiraGO-LightItalic.ttf      | 812940 | 0b686cb6edbb457ef3442f4c500a53bb964b96b939a7603949ee7ed812f5105d |
   | FiraGO-MediumItalic.ttf     | 813936 | 949698ddae3a568f1ada6eed12d5226d448b0b4a6600a44f096cfd9a1aabb555 |
   | FiraGO-SemiBoldItalic.ttf   | 813732 | 0dda9d907ec201586736814689a387a36fd05ebb87ac6faebdf4f8e4299d3020 |
   | FiraGO-ThinItalic.ttf       | 802064 | c3bb05f7ec7715a9f2e733e11b23e2a564ad0fafbdb81e097f0f006d5288850f |
   | FiraGO-TwoItalic.ttf        | 720640 | cebcd6f719b48196e0b23d70515ce9154f2c97edfaf954e2b6e97aa4b79420f1 |
   | FiraGO-UltraLightItalic.ttf | 814244 | 71b11d76754a0d43c412a8af5ce6a69c0c32c4d2e6d8a23e0e747cf4dc62cd10 |
   | FiraGO-Bold.ttf             | 807140 | ab720753c39073556260ebbaee7e7af89f9ca202a7c7abc257d935db590a1e35 |
   | FiraGO-Book.ttf             | 805308 | 4c132d5290477709da7fee51f2494d9d13157024e5011d665ebe73489416f894 |
   | FiraGO-Eight.ttf            | 757808 | ad5c1faab9d627aa69dcf3544530622d6c8281571e603d61879a5885b403b946 |
   | FiraGO-ExtraBold.ttf        | 805876 | 4cc3a0294144d7194e1ab9be8603690d2059b2b66b9106896e1b1bf0ac542347 |
   | FiraGO-ExtraLight.ttf       | 805744 | b1eca47daf25d0f975fedce2a7c18161d5b12f4ccef49bd15c9a55b6e65299d0 |
   | FiraGO-Four.ttf             | 754716 | 57bd7bad431f02d578e2edd7f2e8864aae5420bbe309ee782bd0ab5fafb69aeb |
   | FiraGO-Hair.ttf             | 768432 | 6516767cb6003138ab53f63c07f07d8c8236c3bb9214837dab056395d1e6349a |
   | FiraGO-Heavy.ttf            | 719748 | ac93a492bd88d0bca88bcacb8c169101c013013b9d92bb06d757717e6a5af8a5 |
   | FiraGO-Light.ttf            | 805292 | a8145c545e448cc3c51b1417422bc16ff84c5098907827dbfc13f8109ab3507b |
   | FiraGO-Medium.ttf           | 806400 | 5f753a48c7dff5b7af294e76624febb28c41071a5a65c0fd8a024ea9d1491e8a |
   | FiraGO-Regular.ttf          | 804888 | 495901c0c608ea265f4c31aa2a4c7a313e5cc2a3dd610da78a447fe8e07454a2 |
   | FiraGO-SemiBold.ttf         | 806684 | b47f1eaf02deaf16051a897f84f275326476306eb198f1cbceb5b1f5882021b1 |
   | FiraGO-Thin.ttf             | 793404 | a86be3f3ecf807e363347297bff4db79951394d7b024fe83b8ebb1cd2ddf1152 |
   | FiraGO-Two.ttf              | 708572 | f5691843d026b52c1d40505ebf04fdea67b0eb50ca945642dfa033abf70d5c3c |
   | FiraGO-UltraLight.ttf       | 804924 | a3f15783dc7b783e07518560992f038409eea500729cf2b2cfaef7cc17bd2cf7 |
   :end:

   #+call: update-checksums(replacements=firago-csums)

   Deploy to S3

   #+begin_src bash :dir ../../FiraGO :var dryrun="--dryrun"
     aws s3 $dryrun sync --exclude '*' --include 'FiraGO_TTF_*' --acl public-read Fonts 's3://orgro/assets/fonts/'
   #+end_src

** JetBrains Mono

   Download

   #+begin_src bash :dir ../tmp :mkdirp t :var version="2.225"
     curl -LO https://github.com/JetBrains/JetBrainsMono/releases/download/v$version/JetBrainsMono-$version.zip
     rm -r JetBrainsMono
     mkdir JetBrainsMono
     unzip JetBrainsMono-$version.zip -d JetBrainsMono/$version
   #+end_src

   Checksum

   #+name: jetbrainsmono-csums
   #+begin_src bash :dir ../tmp/JetBrainsMono :results table drawer replace
     for ttf in */fonts/ttf/*.ttf; do
         echo $(basename $ttf) $(stat -f '%z' $ttf) $(openssl sha256 $ttf | cut -d '=' -f 2)
     done
   #+end_src

   #+RESULTS: jetbrainsmono-csums
   :results:
   | JetBrainsMono-Bold.ttf               | 173264 | 4e350d30a649ebbaaa6dd2e38a1f38c4c5fa6692516af47be33dbeec42d58763 |
   | JetBrainsMono-BoldItalic.ttf         | 175800 | e6cded7e6933741aad7fc09c6db0536bea14b83b8accd5288346bd7367112f30 |
   | JetBrainsMono-ExtraBold.ttf          | 175812 | f796e8bb2ffcfd7e635155635a5eab86ce0190a3f710a945a92da29e631c5372 |
   | JetBrainsMono-ExtraBoldItalic.ttf    | 178492 | 35176daf8a62befb3c2a854b07765a2fc186bbb4c8ba3b8f3124b5102f4121fd |
   | JetBrainsMono-ExtraLight.ttf         | 171732 | f37e808b66d5350c935245e71071d95238d0d423fced5d1f011c7f603443213f |
   | JetBrainsMono-ExtraLightItalic.ttf   | 173496 | acf566b08df2025d17aa93bce75311998576689ed21416d35b915cf8a9e66d6f |
   | JetBrainsMono-Italic.ttf             | 175656 | d7972492ce345c58cf8984f65e30c3ccd190738582ded5852f5083e27f3ba068 |
   | JetBrainsMono-Light.ttf              | 173244 | 87b45464e17c8555424f23f50e4ab3df73acba10875a8fa92c2b1bc0ee3a64f3 |
   | JetBrainsMono-LightItalic.ttf        | 175140 | 2f89ffacfae34ea945574b959eafe1d877b1774dbd248a83933c152df0829354 |
   | JetBrainsMono-Medium.ttf             | 173444 | 7b4faad50d02844b8b7e3bfc7df575c2587291c01febfebb83b83d7c37238447 |
   | JetBrainsMono-MediumItalic.ttf       | 176680 | 543008ddb1bdd61e0bf534c25cee6083beb7adbfee64df1bcb79b0550eab1ca2 |
   | JetBrainsMono-Regular.ttf            | 171876 | 1f376439c75ab33392eb7a2f5ec999809493b378728d723327655c9fcb45cea9 |
   | JetBrainsMono-Thin.ttf               | 169480 | e53e50213b604f9a7a3c6aca14318606a0ba051fe0822870cfdc6599623cc982 |
   | JetBrainsMono-ThinItalic.ttf         | 172548 | a88204af54b61ee99b505c52ea6e9f57284fbdf6eaecbe7e8f3a0b8e1aa4e5cf |
   | JetBrainsMonoNL-Bold.ttf             | 116608 | 743a6972e7e0cd0fe2ee7b4af68df4d4653aca76e4607da9ef84c52a87a1a21e |
   | JetBrainsMonoNL-BoldItalic.ttf       | 120048 | 5f99b4bc6b03f37e5998d81d808f77448fe6f8ffc7ef95270846b3e600a882de |
   | JetBrainsMonoNL-ExtraBold.ttf        | 118208 | 657796682c7fb623291eaa927f3ee5e95737bdb72d59162f0d95eb2ef141065a |
   | JetBrainsMonoNL-ExtraBoldItalic.ttf  | 120868 | 6904d84356ada4fd21d13271fb98f678c355e609cedcc6e47d216d87b289786d |
   | JetBrainsMonoNL-ExtraLight.ttf       | 116040 | 34c937e62955c3bf11da18cef87d6ef979fa6188056e23dc141d2c1b7e7ab742 |
   | JetBrainsMonoNL-ExtraLightItalic.ttf | 118404 | 6d7d8be53328a8cd5778856554df8cc3d85926c3a9fa7e25662220f680f24871 |
   | JetBrainsMonoNL-Italic.ttf           | 119268 | bcfb4034cca9fe09316327c3e823036d1bbacd8e45d2f123a9a80793277b2d4d |
   | JetBrainsMonoNL-Light.ttf            | 116204 | 8544e664f2853fee7e43bf41d37dcb0f21dbcacdca8c3a87a73177bb162d8252 |
   | JetBrainsMonoNL-LightItalic.ttf      | 119040 | cdba0280a599e76f183cdaba85c40bc8b3c3e9bd483a5d3f253e320f2771eaff |
   | JetBrainsMonoNL-Medium.ttf           | 115960 | ce7528a1c7d3f774e2a49aca1cfad4fadefc59548c332a45eaaf1025c33b154a |
   | JetBrainsMonoNL-MediumItalic.ttf     | 120040 | 291009509860181d042619d8c101e7c84b7381f509a93c894f0422f62b09ef3b |
   | JetBrainsMonoNL-Regular.ttf          | 115148 | 81364b2eff560aaaaf0e47bac0743edbf9baff67d9f3e5bf10e841b9841bea29 |
   | JetBrainsMonoNL-Thin.ttf             | 114644 | bde82a63bf6c3aa865fc8870b5cc7fd8298a5114785dbecfc0b8dcbc09a17d3b |
   | JetBrainsMonoNL-ThinItalic.ttf       | 117928 | 232226ccb1e29ffa531898a2a9890a5a8ccf8ecd96071d6b40e0af6d57988c06 |
   :end:

   #+call: update-checksums(replacements=jetbrainsmono-csums)

   Deploy to S3

   #+begin_src bash :dir ../tmp :var dryrun="--dryrun"
     aws s3 $dryrun sync --exclude '*' --include 'JetBrainsMono/*.ttf' --acl public-read . 's3://orgro/assets/fonts/'
   #+end_src

** Custom Iosevka

   Download

   #+begin_src bash :dir ../..
     git clone --depth 1 https://github.com/be5invis/Iosevka.git
   #+end_src

   System prerequisites: Install with MacPorts

   #+begin_src bash :dir /sudo::
     port install npm6 ttfautohint
   #+end_src

   Additional preparation and updating

   #+begin_src bash :dir ../../Iosevka :async
     # Check out newest tag; see
     # https://stackoverflow.com/a/22857288/448068
     git fetch --tags
     tag=$(git describe --tags $(git rev-list --tags --max-count=1))
     git checkout $tag
     echo $tag
   #+end_src

   #+RESULTS:
   : v6.0.1

   Configuration: Tangle the following

   #+begin_src yaml :tangle ../../Iosevka/private-build-plans.toml
     [buildPlans.iosevka-orgro]       # <iosevka-custom> is your plan name
     family = "Iosevka Orgro"        # Font menu family name
     # spacing = "normal"               # Optional; Values: `normal`, `term`, `fontconfig-mono`, or `fixed`
     # serifs = "sans"                  # Optional; Values: `sans` or `slab`

     ###################################################################################################
     # Configure variants

     # Optional; Whether to inherit a `ss##` variant
     # [buildPlans.iosevka-custom.variants]
     # inherits = "ss01"

     # Optional; Configure single character's variant
     [buildPlans.iosevka-orgro.variants.design]
     # g = 'single-storey'
     asterisk = 'penta-low'

     # Optional; Configure single character's variant for Upright and Oblique; Overrides [design]
     # [buildPlans.iosevka-custom.variants.upright]
     # i = 'zshaped'
     # l = 'zshaped'

     # Optional; Configure single character's variant for Italic only; Overrides [design]
     # [buildPlans.iosevka-custom.variants.italic]
     # i = 'serifed-tailed'
     # l = 'serifed-tailed'

     # End variant section
     ###################################################################################################

     ###################################################################################################
     # Configure ligations

     # [buildPlans.iosevka-custom.ligations]
     # inherits = "default-calt"   # Optional; inherits an existing ligation set
     # disables = []               # Optional; disable specific ligation groups, overrides inherited ligation set
     # enables  = []               # Optional; enable specific ligation groups, overrides inherited ligation set

     # End ligation section
     ###################################################################################################


     ###################################################################################################
     # Override default building weights
     # When buildPlans.<plan name>.weights is absent, all weights would built and mapped to
     # default values.
     # IMPORTANT : Currently "menu" and "css" property only support numbers between 0 and 1000.
     #             and "shape" properly only supports number between 100 and 900 (inclusive).
     #             If you decide to use custom weights you have to define all the weights you
     #             plan to use otherwise they will not be built.
     [buildPlans.iosevka-orgro.weights.regular]
     shape = 400  # Weight for glyph shapes.
     menu  = 400  # Weight for the font's names.
     css   = 400  # Weight for webfont CSS.

     # [buildPlans.iosevka-custom.weights.book]
     # shape = 450
     # menu  = 450  # Use 450 here to name the font's weight "Book"
     # css   = 450

     [buildPlans.iosevka-orgro.weights.bold]
     shape = 700
     menu  = 700
     css   = 700

     # End weight section
     ###################################################################################################

     ###################################################################################################
     # Override default building slope sets
     # Format: <upright|italic|oblique> = <"normal"|"italic"|"oblique">
     # When this section is absent, all slopes would be built.

     [buildPlans.iosevka-orgro.slopes]
     upright = "normal"
     italic = "italic"
     # oblique = "oblique"

     # End slope section
     ###################################################################################################

     ###################################################################################################
     # Override default building widths
     # When buildPlans.<plan name>.widths is absent, all widths would built and mapped to
     # default values.
     # IMPORTANT : Currently "shape" property only supports numbers between 434 and 664 (inclusive),
     #             while "menu" only supports integers between 1 and 9 (inclusive).
     #             The "shape" parameter specifies the unit width, measured in 1/1000 em. The glyphs'
     #             width are equal to, or a simple multiple of the unit width.
     #             If you decide to use custom widths you have to define all the widths you plan to use,
     #             otherwise they will not be built.

     [buildPlans.iosevka-orgro.widths.normal]
     shape = 500        # Unit Width, measured in 1/1000 em.
     menu  = 5          # Width grade for the font's names.
     css   = "normal"   # "font-stretch' property of webfont CSS.

     # [buildPlans.iosevka-custom.widths.extended]
     # shape = 600
     # menu  = 7
     # css   = "expanded"

     # End width section
     ###################################################################################################

     ###################################################################################################
     # Character Exclusion
     # Specify character ranges in the section below to exclude certain characters from the font being
     # built. Remove this section when this feature is not needed.

     # [buildPlans.iosevka-custom.exclude-chars]
     # ranges = [[10003, 10008]]

     # End character exclusion
     ###################################################################################################

     ###################################################################################################
     # Compatibility Ligatures
     # Certain applications like Emacs does not support proper programming liagtures provided by
     # OpenType, but can support ligatures provided by PUA codepoints. Therefore you can edit the
     # following section to build PUA characters that are generated from the OpenType ligatures.
     # Remove this section when compatibility ligatures are not needed.

     # [[buildPlans.iosevka-custom.compatibility-ligatures]]
     # unicode = 57600 # 0xE100
     # featureTag = 'calt'
     # sequence = '<*>'

     # End compatibility ligatures section
     ###################################################################################################

     ###################################################################################################
     # Metric overrides
     # Certain metrics like line height (leading) could be overridden in your build plan file.
     # Edit the values to change the metrics. Remove this section when overriding is not needed.

     # [buildPlans.iosevka-custom.metric-override]
     # leading = 1250
     # winMetricAscenderPad = 0
     # winMetricDescenderPad = 0
     # powerlineScaleY = 1
     # powerlineScaleX = 1
     # powerlineShiftY = 0
     # powerlineShiftX = 0

     # End metric override section
     ###################################################################################################
   #+end_src

   Build

   #+begin_src bash :dir ../../Iosevka :async
     npm install
     npm run clean
     npm run build -- ttf::iosevka-orgro
   #+end_src

   Checksum

   #+name: iosevka-csums
   #+begin_src bash :dir ../../Iosevka/dist/iosevka-orgro/ttf :results table replace
     for ttf in *.ttf; do
         echo $ttf $(stat -f '%z' $ttf) $(openssl sha256 $ttf | cut -d '=' -f 2)
     done
   #+end_src

   #+RESULTS: iosevka-csums
   | iosevka-orgro-bold.ttf       | 3310616 | a985f630df03dd99bb05cff93ae40ad5633e50f1746fb26b208fbde3644dadfa |
   | iosevka-orgro-bolditalic.ttf | 3456720 | 5b513a2bd4b850117df76e2c3719c9ca1825159228fbd4c0e64d72eb7c96174e |
   | iosevka-orgro-italic.ttf     | 3453632 | 8ca7ec11d28384aeaf019512749edf38aefd14adc4bd8fcfd95d80d9e57a2fa4 |
   | iosevka-orgro-regular.ttf    | 3317388 | 9a592451f45258bd5886ae7e2044c38f6bc4a25625b89c7df388f8ee5701c651 |

   #+call: update-checksums(replacements=iosevka-csums)

   Deploy to S3

   #+begin_src bash :dir ../../Iosevka :var dryrun="--dryrun"
     ver=$(git describe --tags)
     aws s3 $dryrun sync --exclude '*' --include 'ttf/*' --acl public-read dist/iosevka-orgro "s3://orgro/assets/fonts/iosevka-orgro-$ver/"
   #+end_src

** Updating sizes and checksums

   #+name: old-csums
   #+begin_src bash :results output table
     git show HEAD:./custom-fonts.org | grep "^ *|.*|.*| *$" | tr -d '|'
   #+end_src

   #+name: update-checksums
   #+header: :var target="../lib/src/fonts.dart" needles=old-csums
   #+header: :var replacements=()
   #+begin_src ruby :results output
     File.open(target, 'r+') do |out|
       text = out.read
       replacements.each do |filename, size, csum|
         _, old_size, old_csum = needles.assoc(filename)
         next unless old_size && old_csum

         unless size == old_size
           puts "#{filename}: #{old_size} -> #{size}"
           text.gsub!(old_size.to_s) { |_| size.to_s }
         end
         unless csum == old_csum
           puts "#{filename}: #{old_csum} -> #{csum}"
           text.gsub!(old_csum) { |_| csum } unless csum == old_csum
         end
       end

       out.rewind
       out.write(text)
       out.truncate(out.pos)
     end
   #+end_src
